/*
 * This file is generated by jOOQ.
*/
package micropost.data.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import micropost.data.Indexes;
import micropost.data.Keys;
import micropost.data.Public;
import micropost.data.tables.records.PostStatisticsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostStatistics extends TableImpl<PostStatisticsRecord> {

    private static final long serialVersionUID = 73479562;

    /**
     * The reference instance of <code>public.post_statistics</code>
     */
    public static final PostStatistics POST_STATISTICS = new PostStatistics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostStatisticsRecord> getRecordType() {
        return PostStatisticsRecord.class;
    }

    /**
     * The column <code>public.post_statistics.post_id</code>.
     */
    public final TableField<PostStatisticsRecord, Integer> POST_ID = createField("post_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.post_statistics.total_words</code>.
     */
    public final TableField<PostStatisticsRecord, Integer> TOTAL_WORDS = createField("total_words", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.post_statistics.alphanumeric</code>.
     */
    public final TableField<PostStatisticsRecord, Integer> ALPHANUMERIC = createField("alphanumeric", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.post_statistics.non_alphanumeric</code>.
     */
    public final TableField<PostStatisticsRecord, Integer> NON_ALPHANUMERIC = createField("non_alphanumeric", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.post_statistics.word_occurrence</code>.
     */
    public final TableField<PostStatisticsRecord, String> WORD_OCCURRENCE = createField("word_occurrence", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * Create a <code>public.post_statistics</code> table reference
     */
    public PostStatistics() {
        this(DSL.name("post_statistics"), null);
    }

    /**
     * Create an aliased <code>public.post_statistics</code> table reference
     */
    public PostStatistics(String alias) {
        this(DSL.name(alias), POST_STATISTICS);
    }

    /**
     * Create an aliased <code>public.post_statistics</code> table reference
     */
    public PostStatistics(Name alias) {
        this(alias, POST_STATISTICS);
    }

    private PostStatistics(Name alias, Table<PostStatisticsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PostStatistics(Name alias, Table<PostStatisticsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.POST_STATISTICS_POST_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PostStatisticsRecord>> getKeys() {
        return Arrays.<UniqueKey<PostStatisticsRecord>>asList(Keys.POST_STATISTICS_POST_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PostStatisticsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PostStatisticsRecord, ?>>asList(Keys.POST_STATISTICS__POST_STATISTICS_POST_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostStatistics as(String alias) {
        return new PostStatistics(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostStatistics as(Name alias) {
        return new PostStatistics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PostStatistics rename(String name) {
        return new PostStatistics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PostStatistics rename(Name name) {
        return new PostStatistics(name, null);
    }
}
