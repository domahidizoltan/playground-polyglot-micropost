/*
 * This file is generated by jOOQ.
*/
package micropost.data.tables.records;


import java.time.OffsetDateTime;

import javax.annotation.Generated;

import micropost.data.tables.Micropost;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MicropostRecord extends UpdatableRecordImpl<MicropostRecord> implements Record4<Integer, String, OffsetDateTime, String> {

    private static final long serialVersionUID = -808332026;

    /**
     * Setter for <code>public.micropost.id</code>.
     */
    public MicropostRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.micropost.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.micropost.content</code>.
     */
    public MicropostRecord setContent(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.micropost.content</code>.
     */
    public String getContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.micropost.created_at</code>.
     */
    public MicropostRecord setCreatedAt(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.micropost.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.micropost.user_id</code>.
     */
    public MicropostRecord setUserId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.micropost.user_id</code>.
     */
    public String getUserId() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, OffsetDateTime, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, OffsetDateTime, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Micropost.MICROPOST.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Micropost.MICROPOST.CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field3() {
        return Micropost.MICROPOST.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Micropost.MICROPOST.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicropostRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicropostRecord value2(String value) {
        setContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicropostRecord value3(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicropostRecord value4(String value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicropostRecord values(Integer value1, String value2, OffsetDateTime value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MicropostRecord
     */
    public MicropostRecord() {
        super(Micropost.MICROPOST);
    }

    /**
     * Create a detached, initialised MicropostRecord
     */
    public MicropostRecord(Integer id, String content, OffsetDateTime createdAt, String userId) {
        super(Micropost.MICROPOST);

        set(0, id);
        set(1, content);
        set(2, createdAt);
        set(3, userId);
    }
}
