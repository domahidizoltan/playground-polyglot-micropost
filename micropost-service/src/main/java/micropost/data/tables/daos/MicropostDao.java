/*
 * This file is generated by jOOQ.
*/
package micropost.data.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;

import javax.annotation.Generated;

import micropost.data.tables.Micropost;
import micropost.data.tables.records.MicropostRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MicropostDao extends DAOImpl<MicropostRecord, micropost.data.tables.pojos.Micropost, Integer> {

    /**
     * Create a new MicropostDao without any configuration
     */
    public MicropostDao() {
        super(Micropost.MICROPOST, micropost.data.tables.pojos.Micropost.class);
    }

    /**
     * Create a new MicropostDao with an attached configuration
     */
    public MicropostDao(Configuration configuration) {
        super(Micropost.MICROPOST, micropost.data.tables.pojos.Micropost.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(micropost.data.tables.pojos.Micropost object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<micropost.data.tables.pojos.Micropost> fetchById(Integer... values) {
        return fetch(Micropost.MICROPOST.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public micropost.data.tables.pojos.Micropost fetchOneById(Integer value) {
        return fetchOne(Micropost.MICROPOST.ID, value);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<micropost.data.tables.pojos.Micropost> fetchByContent(String... values) {
        return fetch(Micropost.MICROPOST.CONTENT, values);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<micropost.data.tables.pojos.Micropost> fetchByCreatedAt(OffsetDateTime... values) {
        return fetch(Micropost.MICROPOST.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<micropost.data.tables.pojos.Micropost> fetchByUserId(String... values) {
        return fetch(Micropost.MICROPOST.USER_ID, values);
    }
}
